{"pages":[],"posts":[{"title":"建置網站紀錄","text":"緣由原本想要一個較個人風的 email參照 網路上 得知 Google Domains 不只提供 domain 同時提供指定 email 轉寄的功能就直接照 這篇 來購買一個 domainGoogle 相較其他網域商，雖然價格貴一點點，但每年價格都很一致不像有些強打第一年優惠但第二年以後價格快翻倍跳反而比 Google 的還貴在這邊最便宜的一年 9 USD，商用字詞的約 1X USD 即可入手 (我是買 12 USD 的) 設定 Email 轉寄 購買網域後，進入設定頁 -&gt; 電子郵件 最下方 “電子郵件轉寄” 填入你想要的別名與轉寄的地址，儲存後就會轉寄了 利用 Hexo 與 GitHub Page 建立免費的靜態 Blog所需環境與工具 一個 GitHub 帳號 NodeJS Git 建立一個 Repository 登入 GitHub 建立 Repository name 填入 yourname.github.io (yourname 請改成你的 GitHub ID)下方的 type 記得請勾選 “public” 安裝 Hexo1234$ npm i hexo-cli -g$ hexo init blog$ cd blog$ npm i 安裝 Hexo Git1$ npm i hexo-deployer-git 安裝 Blog 主題這邊我們以安裝 minos 為例子其中 minos 需要 hexo-renderer-sass 這個套件 12$ git clone https://github.com/ppoffice/hexo-theme-minos.git themes/minos$ npm i hexo-renderer-sass 調整設定在 blog 資料夾內可以看到 “_config.yml” 這個設定檔案打開後在中下方有個 theme 的部分改成: 1theme: minos 最下方 deploy 的部分則改成: 1234deploy: type: git repository: http://github.com/yourname/yourname.github.io.git branch: master 這裡的 “yourname” 改成你的 github 帳號其他更詳細的設定可參考 這裡 開啟 Server1$ hexo s -p [port] 預設在 http://localhost:4000 看 Local Page (裡面會有一篇 Hello World) 建置靜態網頁把 Markdown File 轉成網頁 1$ hexo g 發佈到 GitHub Page 上1$ hexo d 或是你也可以建置、發佈一起做 1$ hexo d -g 網站轉址既然我們已經有 Google Domain 跟 Hexo + GitHub Page 產的 Blog，該是串起來的時候了 設定 DNS到 Google Domains 設定頁 -&gt; DNS -&gt; 自訂資源紀錄添加一筆 Type A，IP 如下: 185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153 再添加一筆 CNAME:name 填 subdomain (例如 “blog”)data 填 yourname.github.io (yourname 請改成你的 github ID) 填完顯示如下: 設定 GitHub Page 的 Domain 在 /blog/source 資料夾建立 CNAME 檔案 12$ cd /blog/source$ touch CNAME 檔案內填寫入 1subdomain.domain.com 假設我的 subdomain 是 “blog” 我買的 domain 是 brchen777.com 那在這邊要填入的會是 blog.brchen777.com 假設有填好，進入 GitHub Repository -&gt; Settings -&gt; GitHub Pages 區塊，會有 “Your site is published at XXX” 的訊息，其中 XXX 就是 blog 的網址，顯示如下: GitHub Page 有內建 HTTPS，網站設定好一段時間之後就有 “Enforce HTTPS” 可選(如上圖的下方) 設定多個 Subdomain 指向同一個 GitHub Page因為 GitHub Page 不支援多個 CNAME 設定，所以其他的 subdomain 要自行設定轉址到 Google Domains 設定頁 -&gt; DNS -&gt; 綜合記錄假設要把 “www” 這個 subdomain 轉址，新增一筆子網域轉址如下:以這篇案例來說，www.brchen777.com 與 brchen777.github.io 都會指到 blog.brchen777.com 參考資料 在 Google Domains 註冊購買網域名稱教學 Hexo+GitHub，新手也可以快速建立部落格 如何搭建個人 Blog 使用 Hexo + Gitpage Hexo - 前端也能建置部落格！更換主題與發表文章篇 Configuring a custom domain for your GitHub Pages site 自訂網域名稱：Google Domain Troubleshooting custom domains and GitHub Pages","link":"/2019/建置網站紀錄/"},{"title":"遠端控制內網電腦","text":"緣由有時會有學習或工作用的電腦沒有實體 IP (在內網)，但又需要連線到那台電腦這時可以利用 Reverse SSH Tunneling 機制來連線 所需環境與工具 一台有實體 IP 的伺服器如沒有可購買 VPS，如 Linode，最便宜方案一個月 5 美金 OpenSSHLinux 有內建Windows 10 可從 設定 來啟用 autossh (選用) 範例環境介紹 Machine Account IP Port Info ServerA userA 192.168.0.101 22 Private IP (內網；目標電腦) ServerB userB 149.12.34.56 1234 Public IP (外網；中繼電腦) Client user User (你的電腦) 你想從 Client 這台電腦連到工作用的電腦 ServerA，預期連線流程大概如下: 1Client -----&gt; ServerB --| 防火牆 |--&gt; ServerA 又因為 ServerA 沒有實體 IP，ServerB 無法直接連到 ServerA可以利用 Reverse SSH Tunneling 機制ServerA 先連到 ServerB 建立隧道: 1ServerB &lt;==| 防火牆 |== ServerA ServerB 再依靠該隧道 port 1234 連到 ServerA: 1ServerB ≡≡| 防火牆 |≡≡&gt; ServerA 免密碼登入連線時會需要帳密如果想免密碼登入可執行此步驟把 public key 傳給對方 12[userA@ServerA] $ ssh-keygen # 產一對 key[userA@ServerA] $ ssh-copy-id -i ~/.ssh/id_rsa.pub userB@149.12.34.56 # 把 public key 送給對方 目標電腦設定Server A 開一個隧道到 ServerB 1[userA@ServerA] $ ssh -NfR 1234:localhost:22 userB@149.12.34.56 # f 代表背景執行 連到目標電腦方法 1Client 先連到 ServerB 1[user@Client] $ ssh userB@149.12.34.56 因為前面 ServerA 已經開一個隧道過來所以 ServerB 就能連到 ServerA 了 1[userB@ServerB] $ ssh userA@localhost -p 1234 方法 2使用一個指令來達成 “先連到 ServerB 再下指令連到 ServerA” 1[user@Client] $ ssh -t userB@149.12.34.56 \"ssh userA@localhost -p 1234\" 方法 3直接以 ServerB 當跳板連到 ServerA 1[user@Client] $ ssh -o \"ProxyJump userB@149.12.34.56\" userA@localhost -p 1234 或是 1[user@Client] $ ssh -J userB@149.12.34.56 userA@localhost -p 1234 方法 4原本 ServerB 只能透過 localhost 來連到 ServerAServer A 設定時加上 “-g” 這個 option (允許遠端主機連到本地的轉發 port)讓 Client 透過 ServerB 的 port 直連到 ServerA 1[userA@ServerA] $ ssh -gNfR 0.0.0.0:1234:localhost:22 userB@149.12.34.56 Client 下指令 1[user@Client] $ ssh 149.12.34.56 -p 1234 其他相關指令查看網路狀態1$ netstat -a|less # less 代表翻頁檢視 登出登入後如果想登出可執行以下指令: 1$ exit 關閉 SSH Tunnel以下為列出 process 資訊的指令: 123$ ps -ef|grep 1234 # 列出使用 1234 port 的 process$ ps aux|less # 列出正在進行的 process$ ps aux|grep ssh # 列出 ssh 相關的 process 找到 process id 後就能刪除: 1$ kill -9 [process id] # 刪除指定 process id 的 process 斷線時自動重連有連線就有可能斷線這時候 serverA 就可以用 autossh 來建立 Reverse SSH Tunneling: 12# -M 後面是監聽用的 port, 不可跟 localhost 前的 port 一樣, 設 0 代表強制關閉[userA@ServerA] $ autossh -M 0 -o ServerAliveInterval=10 -o ExitOnForwardFailure=yes -NfR 1234:localhost:22 userB@149.12.34.56 或是可使用 cmd-boost 這個工具 如果要關閉 autossh: 1$ pkill -3 autossh 參考資料 Reverse SSH Tunnel實際運用，搭配auotssh永不斷線，putty建立反向tunnel 實現免密碼 ssh 登入遠端主機 25 Best SSH Commands / Tricks ssh通过代理登录远程主机及穿越跳板机 What Is Reverse SSH Tunneling? (and How to Use It) SSH COMMAND","link":"/2019/遠端控制內網電腦/"},{"title":"2019 面試紀錄","text":"個人狀態學經歷：國立資工學、碩畢，3 年 PHP 全端 + 2 年 NodeJS 後端經驗8 月初臨時起意準備弄好履歷就開始遠征 (長征?)以下公司為有面試或電訪公司，按照時間排序理想薪資統一給年薪，預計到職日都說 10 月N 為某一份工作的月薪 面試公司利頡資訊職位：高級後端工程師 (自投)感想：接大型案子的公司 (不接官網之類的)；問很多程式語言間的差異、作業系統、DB 規劃，問的很雜又細，除了 JS 以外被電到快飛起來；如果想湊個面試經驗可試試。結果：Offer Get (N-2k * 14) VMFive職位：Backend Engineer (對方找的)感想：網路資料已好幾年沒更新的公司，目前轉型廣告投放 + 接案；對方 HR 在 104 上給錯公司地址，剛好那地址周圍數百公尺沒有門牌沒路標，讓我在那 1X 分鐘的路程來回繞了 4 次，問了路人、查了 Google Map、打電話給 HR 都找不到目的地，最後是查了官網才找到真正的地址；原本準備 45 分鐘來應付 1X 分鐘的路程，最後卻反而遲到 15 分鐘才到該公司…；事後發現就算地址給錯，但 Google Map 當初指的路才是對的… (Google 大法好!!!)結果：無聲卡 廣達研究院職位：Full-Stack Developer (對方找的)感想：桃園林口的代工廠，部門有點像硬體廠內的軟體公司，算是一個獨立自主的單位；開場先考類多益後面試，因英文沒過一週後補考 + 二面；二面完隔天給口頭 Offer，只是核薪時對方 HR 要求提出各種文件當年資證明，挺複雜的…結果：Offer Get (N+3k * 15?) 奔騰網路科技職位：Platform Developer (對方找的)感想：公司在台北新光大樓的樓上；面完感覺還不錯，但對方好像因預計到職日還有一個月，所以希望我再看看，半個月後有興趣再來二面，半個月後有打過來聊完說會幫我約時間，然後就沒然後了，大概因對方覺得我想二面的意願沒有很大的感覺?結果：對方說要安排二面卻無聲卡 仁寶職位：NodeJS 後端工程師 (對方找的)感想：內科的代工廠，接待區跟前測區非常不像一個大公司該有的樣子 (交誼廳擺幾台筆電就當成了前測與等待區了…)；開場先考英文然後到別棟去面試，剛好主管沒空中，所以由部門內的 2 位工程師來聊天，其中 1 個面到一半也中離，一週後主管又寄信給我邀請我面試，因對方口吻很像第一次接觸，跟對方提醒後對方重新確認並邀請二面，二面主要與 2 位主管聊天與看一下 Coding Style，又一週後給口頭 Offer；以面試感想來說前測場地不是很好，時間上二面與電訪都約下午 5 點以後 (面試官太忙沒空)，感覺挺妙的…結果：Offer Get (N+5k * 15?) Canner 易開科技職位：後端工程師 (對方找的)感想：公司在幸福站對面的住家內，新公司位址在別處裝潢中，是個超迷你的新創；一面為電訪問各種技術，二週後二面為上機考；老闆年紀跟我差不多但是是位各種技術底子很深厚的人，感覺假如加入打拼應該可以學習很多?結果：感謝函 書亞集成職位：後端工程師 (自投)感想：公司離內科站超近，主營運現有的古典音樂網站；整場面試純雙方互相自介，沒任何技術問題；面試官是一個講求態度與高效率的人 (不要浪費自身生命與他人時間)，也希望找進來的人才能培養為軟體架構師，所以該公司的錄取標準比較特別，為非面試官的其他同事投票，所以會記錄面試者的言行舉止以供投票參考。結果：感謝函 (大概是我面試時白目的問了被對方制止的問題導致扣分很多) awoo 阿物職位：PHP 工程師 (對方找的)感想：公司在馬偕醫院附近的頂樓，主負責各網站 SEO 的優化；面試前先筆試，筆試完第一關為 2 位 RD 主管 (or 工程師) 面試，稍微自介與檢討筆試內容；第二關為 PM 面試，不知道是因為時間接近中午或是薪資談不妥，第二關最後面有種面試官要強行結束面試趕我走的感覺…結果：無聲卡 沛司科技職位：Web front-end 軟體工程師 (對方找的)感想：公司在南港新創基地，目前產品有單車的 App；面試第一關為 2 位現職工程師面試，對方感覺實力很強，但其中一位一直有種要否定面試者經歷的感覺，讓人感覺不快…；第二關為跟美女老闆談公司狀況與福利。結果：無聲卡 群暉職位：Web &amp; System Developer (對方找的)感想：公司剛搬到亞東醫院附近沒多久，大樓內沒美食區，目前只能去學校附近找吃的；面試粗估有四關，第一關跟 HR 自介；第二關來了位資深的女工程師直接白板題：演算法三題與 SQL 語法一題，雖然有解出來，但耗時太久 (一小時半) 無法到下一關，半個月後收到感謝函。結果：感謝函 遊戲橘子職位：約聘工程師 (獵頭找的)感想：公司雖在內科但是離捷運站有段路，要負責的內容為 beanfun 的後台製作；面試官有事少 1 人，對方問很多架構層面的問題；從面談中覺得對方算是不想花人事成本，只願意先約聘的公司，而且從面試官口中得知該職位要因應各種節慶 + 上頭決策而瘋狂加班，最高紀錄是過年前臨時更改活動內容讓工程師加了 120 小時的班，內心只有一個想法：怕.jpg。結果：拒絕二面 悠福科技職位：後端工程師 (對方找的)感想：公司在松江南京附近，新創公司，感覺有點舊舊破破的，主負責數位行銷或是程序化廣告的部分；唯一一間面試卻沒提供任何飲用水的公司 (大扣分)，跟面試官互相自介完就結束了，順便一提上班的電腦要自備。結果：拒絕二面 Verizon Media (Yahoo)職位：前端工程師 (自投)感想：第一關為電訪 (多名面試官圍繞電話筒的感覺)；原以為 JD 上有寫 NodeJS，會問一些後端之類的問題，結果對方真的只問了純前端的問題，太久沒用整個被電到飛起來；對方說因為同事有外國人，假如有後續要英文面試。結果：無聲卡 趨勢科技職位：約聘工程師 (獵頭找的)感想：公司在台北教育大學附近，職缺需求要用 Python 做一個釣魚網站學習平台，跟 2 位面試官互相自介，沒任何技術問題；因為公司政策，各部門有人數上限，部門只好花錢找人力，除非有人離職，不然約聘轉正有很大的疑慮。結果：無聲卡 逸志科技職位：研發工程師 (對方找的)感想：市政府附近的住家內，金融科技新創，職缺需求要 Java；老闆有 CFP 證照又有某金控還證券商的總經理經歷，是個非常有自信的女強人，要我直接拿名字 Google 就能認識她了；每天至少加班一小時以上，感覺會很累但是是一個可以學到很多東西的地方?結果：無聲卡 國泰金融 (大數數)職位：NodeJS 工程師 (對方找的)感想：總部在市政府附近，是個號稱用各種新技術的部門，目前要整合各種舊系統；工作量不會因各種節慶或決策之類的影響，準時上下班，有點像使用新技術的公務機關? 其中一位面試官一直問研替離職原因的細節，感覺超沒禮貌…；面試過程因規定不能提公司福利的部分，要以後跟 HR 的第 N 次面試才會談，但你們不只缺人，徵一個人跑完流程要快 50 天 (對方提供的數據)，真的沒問題嗎…結果：無聲卡 總結 英文很重要假如要投大廠很難不碰到英文，因為會有以下幾種情況：(1) 要求英文 CV(2) 英文電訪 or 面試(3) 面試前先考類多益，考過了再開始面試(4) 前測 or 上機考的題目全英文，而且題目長得跟閱讀文章一樣資訊業很多機會都是外商職缺，英文一差就會刪掉很多機會 刷 LeetCode有些公司面是直接白板題或上機考刷題除了訓練解析速度外，維持程式手感很重要的 從準備開始丟履歷前 1~2 個月就要開始準備畢竟求職前就有一堆前置作業要忙：(1) 重新複習資訊類觀念 (前後端、作業系統、資料結構、系統架構、DB 規劃…等等)(2) 刷 LeetCode(3) 整理作品集(4) 修整履歷每一項都是耗時耗力的工作….","link":"/2019/2019-面試紀錄/"}],"tags":[{"name":"Blog","slug":"Blog","link":"/tags/Blog/"},{"name":"操作","slug":"操作","link":"/tags/操作/"},{"name":"Others","slug":"Others","link":"/tags/Others/"}],"categories":[{"name":"Web","slug":"Web","link":"/categories/Web/"},{"name":"Others","slug":"Others","link":"/categories/Others/"}]}